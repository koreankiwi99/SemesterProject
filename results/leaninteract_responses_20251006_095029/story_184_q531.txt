Story ID: 184
Example ID: 531
Premises: "Stranger Things" is a popular Netflix show.
If a Netflix show is popular, Karen will binge-watch it.
If and only if Karen binge-watches a Netflix show, she will download it.
Karen does not download "Black Mirror."
"Black Mirror" is a Netflix show.
If Karen binge-watches a Netflix show, she will share it with Lisa.
Conclusion: "Black Mirror" is popular.

==================================================
Iteration 1
==================================================
<lean>
axiom Show : Type
axiom Person : Type

axiom Karen : Person
axiom Lisa : Person

axiom StrangerThings : Show
axiom BlackMirror : Show

axiom NetflixShow : Show → Prop
axiom Popular : Show → Prop
axiom BingeWatches : Person → Show → Prop
axiom Downloads : Person → Show → Prop
axiom SharesWith : Person → Person → Show → Prop

-- Premises from the text
axiom popular_netflix_implies_binge :
  ∀ s : Show, NetflixShow s → Popular s → BingeWatches Karen s

axiom binge_iff_download_if_netflix :
  ∀ s : Show, NetflixShow s → (BingeWatches Karen s ↔ Downloads Karen s)

axiom not_downloads_blackmirror : ¬ Downloads Karen BlackMirror
axiom blackmirror_is_netflix : NetflixShow BlackMirror

axiom share_if_binge_netflix :
  ∀ s : Show, NetflixShow s → BingeWatches Karen s → SharesWith Karen Lisa s

-- Contextual information (not used in the main derivation)
axiom st_is_netflix : NetflixShow StrangerThings
axiom st_is_popular : Popular StrangerThings

-- We derive that Black Mirror is not popular (negation of the claim).
theorem not_popular_blackmirror : ¬ Popular BlackMirror := by
  intro hpop
  have h_binge : BingeWatches Karen BlackMirror :=
    popular_netflix_implies_binge BlackMirror blackmirror_is_netflix hpop
  have h_iff := binge_iff_download_if_netflix BlackMirror blackmirror_is_netflix
  have h_binge_implies_download : BingeWatches Karen BlackMirror → Downloads Karen BlackMirror :=
    Iff.mp h_iff
  have h_download : Downloads Karen BlackMirror := h_binge_implies_download h_binge
  exact not_downloads_blackmirror h_download
</lean>
ANSWER: False

--- Lean Code ---
axiom Show : Type
axiom Person : Type

axiom Karen : Person
axiom Lisa : Person

axiom StrangerThings : Show
axiom BlackMirror : Show

axiom NetflixShow : Show → Prop
axiom Popular : Show → Prop
axiom BingeWatches : Person → Show → Prop
axiom Downloads : Person → Show → Prop
axiom SharesWith : Person → Person → Show → Prop

-- Premises from the text
axiom popular_netflix_implies_binge :
  ∀ s : Show, NetflixShow s → Popular s → BingeWatches Karen s

axiom binge_iff_download_if_netflix :
  ∀ s : Show, NetflixShow s → (BingeWatches Karen s ↔ Downloads Karen s)

axiom not_downloads_blackmirror : ¬ Downloads Karen BlackMirror
axiom blackmirror_is_netflix : NetflixShow BlackMirror

axiom share_if_binge_netflix :
  ∀ s : Show, NetflixShow s → BingeWatches Karen s → SharesWith Karen Lisa s

-- Contextual information (not used in the main derivation)
axiom st_is_netflix : NetflixShow StrangerThings
axiom st_is_popular : Popular StrangerThings

-- We derive that Black Mirror is not popular (negation of the claim).
theorem not_popular_blackmirror : ¬ Popular BlackMirror := by
  intro hpop
  have h_binge : BingeWatches Karen BlackMirror :=
    popular_netflix_implies_binge BlackMirror blackmirror_is_netflix hpop
  have h_iff := binge_iff_download_if_netflix BlackMirror blackmirror_is_netflix
  have h_binge_implies_download : BingeWatches Karen BlackMirror → Downloads Karen BlackMirror :=
    Iff.mp h_iff
  have h_download : Downloads Karen BlackMirror := h_binge_implies_download h_binge
  exact not_downloads_blackmirror h_download

--- Lean Verification ---
Success: True

==================================================
Final Result:
==================================================
Ground Truth: False
Prediction: False
Correct: Yes
Total Iterations: 1
