Story ID: 197
Example ID: 560
Premises: It costs $205 to take the GRE test, which is cheaper than $300.
ETS provides financial aid to those GRE applicants who prove economic hardship.
Those living in single-parent families or having few resources available to them can prove economic hardship.
Tom lives in a single-parent family.
Tom's dad has been out of work, and Tom has few resources available to them. 
Tom is applying to take the GRE test.
Conclusion: ETS provides financial aid to Tom.

==================================================
Iteration 1
==================================================
<lean>
axiom Person : Type
axiom Tom : Person

axiom GREApplicant : Person → Prop
axiom ProvesEconomicHardship : Person → Prop
axiom LivesInSingleParentFamily : Person → Prop
axiom HasFewResources : Person → Prop
axiom ETSProvidesFinancialAid : Person → Prop

-- Rules from the text
axiom aid_rule :
  ∀ p : Person, GREApplicant p → ProvesEconomicHardship p → ETSProvidesFinancialAid p

axiom hardship_rule :
  ∀ p : Person, (LivesInSingleParentFamily p ∨ HasFewResources p) → ProvesEconomicHardship p

-- Facts about Tom
axiom Tom_single : LivesInSingleParentFamily Tom
axiom Tom_few : HasFewResources Tom
axiom Tom_applicant : GREApplicant Tom

theorem goal : ETSProvidesFinancialAid Tom := by
  have hhard : ProvesEconomicHardship Tom :=
    hardship_rule Tom (Or.inl Tom_single)
  exact aid_rule Tom Tom_applicant hhard
</lean>
ANSWER: True

--- Lean Code ---
axiom Person : Type
axiom Tom : Person

axiom GREApplicant : Person → Prop
axiom ProvesEconomicHardship : Person → Prop
axiom LivesInSingleParentFamily : Person → Prop
axiom HasFewResources : Person → Prop
axiom ETSProvidesFinancialAid : Person → Prop

-- Rules from the text
axiom aid_rule :
  ∀ p : Person, GREApplicant p → ProvesEconomicHardship p → ETSProvidesFinancialAid p

axiom hardship_rule :
  ∀ p : Person, (LivesInSingleParentFamily p ∨ HasFewResources p) → ProvesEconomicHardship p

-- Facts about Tom
axiom Tom_single : LivesInSingleParentFamily Tom
axiom Tom_few : HasFewResources Tom
axiom Tom_applicant : GREApplicant Tom

theorem goal : ETSProvidesFinancialAid Tom := by
  have hhard : ProvesEconomicHardship Tom :=
    hardship_rule Tom (Or.inl Tom_single)
  exact aid_rule Tom Tom_applicant hhard

--- Lean Verification ---
Success: True

==================================================
Final Result:
==================================================
Ground Truth: True
Prediction: True
Correct: Yes
Total Iterations: 1
