Story ID: 340
Example ID: 895
Premises: Everyone at the mixer is a Grand Slam champion or an Oscar-nominated actor.
Every Grand Slam champion at the mixer is a professional tennis player.
All Oscar-nominated actors at the mixer are celebrities.
All professional tennis players at the mixer are athletes.
If a person at the mixer is a celebrity, then they are well paid.
If a person at the mixer is an athlete, then they are famous.
All well-paid people at the mixer live in tax havens.
Djokovic is at the mixer: if Djokovic is a famous athlete, then Djokovic is well-paid.
Conclusion: Djokovic does not live in a tax haven.

==================================================
Iteration 1
==================================================
<lean>
axiom Person : Type

axiom AtMixer : Person → Prop
axiom GrandSlamChampion : Person → Prop
axiom OscarNominatedActor : Person → Prop
axiom ProTennisPlayer : Person → Prop
axiom Celebrity : Person → Prop
axiom Athlete : Person → Prop
axiom WellPaid : Person → Prop
axiom LivesInTaxHaven : Person → Prop
axiom Famous : Person → Prop

axiom Djokovic : Person

-- Premises
axiom everyone_choice :
  ∀ x, AtMixer x → (GrandSlamChampion x ∨ OscarNominatedActor x)

axiom gc_implies_pro :
  ∀ x, AtMixer x → GrandSlamChampion x → ProTennisPlayer x

axiom oscar_implies_celebrity :
  ∀ x, AtMixer x → OscarNominatedActor x → Celebrity x

axiom pro_implies_athlete :
  ∀ x, AtMixer x → ProTennisPlayer x → Athlete x

axiom celeb_implies_wellpaid :
  ∀ x, AtMixer x → Celebrity x → WellPaid x

axiom athlete_implies_famous :
  ∀ x, AtMixer x → Athlete x → Famous x

axiom wellpaid_implies_taxhaven :
  ∀ x, AtMixer x → WellPaid x → LivesInTaxHaven x

axiom djokovic_at_mixer : AtMixer Djokovic

axiom djokovic_famous_athlete_implies_wellpaid :
  (Famous Djokovic ∧ Athlete Djokovic) → WellPaid Djokovic

-- From the premises, Djokovic lives in a tax haven.
theorem djokovic_lives_in_tax_haven : LivesInTaxHaven Djokovic := by
  have hAt : AtMixer Djokovic := djokovic_at_mixer
  have hdisj : GrandSlamChampion Djokovic ∨ OscarNominatedActor Djokovic :=
    everyone_choice Djokovic hAt
  cases hdisj with
  | inl hGS =>
      have hPro : ProTennisPlayer Djokovic :=
        gc_implies_pro Djokovic hAt hGS
      have hAth : Athlete Djokovic :=
        pro_implies_athlete Djokovic hAt hPro
      have hFam : Famous Djokovic :=
        athlete_implies_famous Djokovic hAt hAth
      have hWP : WellPaid Djokovic :=
        djokovic_famous_athlete_implies_wellpaid ⟨hFam, hAth⟩
      exact wellpaid_implies_taxhaven Djokovic hAt hWP
  | inr hOsc =>
      have hCel : Celebrity Djokovic :=
        oscar_implies_celebrity Djokovic hAt hOsc
      have hWP : WellPaid Djokovic :=
        celeb_implies_wellpaid Djokovic hAt hCel
      exact wellpaid_implies_taxhaven Djokovic hAt hWP

-- The textual claim "Djokovic does not live in a tax haven" contradicts the premises.
theorem claim_contradicts_premises : (¬ LivesInTaxHaven Djokovic) → False := by
  intro h
  exact h djokovic_lives_in_tax_haven
</lean>
ANSWER: False

--- Lean Code ---
axiom Person : Type

axiom AtMixer : Person → Prop
axiom GrandSlamChampion : Person → Prop
axiom OscarNominatedActor : Person → Prop
axiom ProTennisPlayer : Person → Prop
axiom Celebrity : Person → Prop
axiom Athlete : Person → Prop
axiom WellPaid : Person → Prop
axiom LivesInTaxHaven : Person → Prop
axiom Famous : Person → Prop

axiom Djokovic : Person

-- Premises
axiom everyone_choice :
  ∀ x, AtMixer x → (GrandSlamChampion x ∨ OscarNominatedActor x)

axiom gc_implies_pro :
  ∀ x, AtMixer x → GrandSlamChampion x → ProTennisPlayer x

axiom oscar_implies_celebrity :
  ∀ x, AtMixer x → OscarNominatedActor x → Celebrity x

axiom pro_implies_athlete :
  ∀ x, AtMixer x → ProTennisPlayer x → Athlete x

axiom celeb_implies_wellpaid :
  ∀ x, AtMixer x → Celebrity x → WellPaid x

axiom athlete_implies_famous :
  ∀ x, AtMixer x → Athlete x → Famous x

axiom wellpaid_implies_taxhaven :
  ∀ x, AtMixer x → WellPaid x → LivesInTaxHaven x

axiom djokovic_at_mixer : AtMixer Djokovic

axiom djokovic_famous_athlete_implies_wellpaid :
  (Famous Djokovic ∧ Athlete Djokovic) → WellPaid Djokovic

-- From the premises, Djokovic lives in a tax haven.
theorem djokovic_lives_in_tax_haven : LivesInTaxHaven Djokovic := by
  have hAt : AtMixer Djokovic := djokovic_at_mixer
  have hdisj : GrandSlamChampion Djokovic ∨ OscarNominatedActor Djokovic :=
    everyone_choice Djokovic hAt
  cases hdisj with
  | inl hGS =>
      have hPro : ProTennisPlayer Djokovic :=
        gc_implies_pro Djokovic hAt hGS
      have hAth : Athlete Djokovic :=
        pro_implies_athlete Djokovic hAt hPro
      have hFam : Famous Djokovic :=
        athlete_implies_famous Djokovic hAt hAth
      have hWP : WellPaid Djokovic :=
        djokovic_famous_athlete_implies_wellpaid ⟨hFam, hAth⟩
      exact wellpaid_implies_taxhaven Djokovic hAt hWP
  | inr hOsc =>
      have hCel : Celebrity Djokovic :=
        oscar_implies_celebrity Djokovic hAt hOsc
      have hWP : WellPaid Djokovic :=
        celeb_implies_wellpaid Djokovic hAt hCel
      exact wellpaid_implies_taxhaven Djokovic hAt hWP

-- The textual claim "Djokovic does not live in a tax haven" contradicts the premises.
theorem claim_contradicts_premises : (¬ LivesInTaxHaven Djokovic) → False := by
  intro h
  exact h djokovic_lives_in_tax_haven

--- Lean Verification ---
Success: True

==================================================
Final Result:
==================================================
Ground Truth: False
Prediction: False
Correct: Yes
Total Iterations: 1
