Story ID: 361
Example ID: 958
Premises: If people spill a lot of food on their clothing, then they are not notably tidy.
All clumsy foodies who go out frequently to find new food restaurants to try are people who spill a lot of food on their clothing.
If people are cleanly, then they are notably tidy.
If people value order and spotlessness, then they are cleanly.
All people whose families prioritize order and spotlessness themselves value order and spotlessness.
Peter is either a person who spills a lot of food on his clothing and is cleanly, or a person who does not spill a lot of food on his clothing and is not cleanly
Conclusion: Peter is notably tidy.

==================================================
Iteration 1
==================================================
<lean>
axiom Person : Type
axiom Peter : Person

axiom Spills : Person → Prop
axiom Tidy : Person → Prop
axiom Cleanly : Person → Prop
axiom ValuesOrderSpotlessness : Person → Prop
axiom FamilyPrioritizesOrderSpotlessness : Person → Prop
axiom ClumsyFoodie : Person → Prop
axiom GoesOutFrequentlyToTryNewRestaurants : Person → Prop

-- Premises
axiom spills_imp_not_tidy :
  ∀ x : Person, Spills x → ¬ Tidy x
axiom clumsy_foodie_goes_out_imp_spills :
  ∀ x : Person, ClumsyFoodie x ∧ GoesOutFrequentlyToTryNewRestaurants x → Spills x
axiom cleanly_imp_tidy :
  ∀ x : Person, Cleanly x → Tidy x
axiom values_order_imp_cleanly :
  ∀ x : Person, ValuesOrderSpotlessness x → Cleanly x
axiom family_prior_imp_values_order :
  ∀ x : Person, FamilyPrioritizesOrderSpotlessness x → ValuesOrderSpotlessness x
axiom peter_either :
  (Spills Peter ∧ Cleanly Peter) ∨ (¬ Spills Peter ∧ ¬ Cleanly Peter)

-- From the disjunction and the incompatibility of the first disjunct with other premises,
-- we can derive that Peter does not spill and is not cleanly.
theorem peter_not_spills_and_not_cleanly : ¬ Spills Peter ∧ ¬ Cleanly Peter := by
  have h := peter_either
  cases h with
  | inl hp =>
      have hnot : ¬ Tidy Peter := spills_imp_not_tidy Peter hp.left
      have ht   : Tidy Peter := cleanly_imp_tidy Peter hp.right
      exact False.elim (hnot ht)
  | inr hq =>
      exact hq

-- Note: With the given premises, we cannot derive Tidy Peter nor its negation.
-- The second disjunct ¬Spills Peter ∧ ¬Cleanly Peter is consistent with all premises,
-- and from it neither Tidy Peter nor ¬Tidy Peter follows.
</lean>
ANSWER: Unknown

--- Lean Code ---
axiom Person : Type
axiom Peter : Person

axiom Spills : Person → Prop
axiom Tidy : Person → Prop
axiom Cleanly : Person → Prop
axiom ValuesOrderSpotlessness : Person → Prop
axiom FamilyPrioritizesOrderSpotlessness : Person → Prop
axiom ClumsyFoodie : Person → Prop
axiom GoesOutFrequentlyToTryNewRestaurants : Person → Prop

-- Premises
axiom spills_imp_not_tidy :
  ∀ x : Person, Spills x → ¬ Tidy x
axiom clumsy_foodie_goes_out_imp_spills :
  ∀ x : Person, ClumsyFoodie x ∧ GoesOutFrequentlyToTryNewRestaurants x → Spills x
axiom cleanly_imp_tidy :
  ∀ x : Person, Cleanly x → Tidy x
axiom values_order_imp_cleanly :
  ∀ x : Person, ValuesOrderSpotlessness x → Cleanly x
axiom family_prior_imp_values_order :
  ∀ x : Person, FamilyPrioritizesOrderSpotlessness x → ValuesOrderSpotlessness x
axiom peter_either :
  (Spills Peter ∧ Cleanly Peter) ∨ (¬ Spills Peter ∧ ¬ Cleanly Peter)

-- From the disjunction and the incompatibility of the first disjunct with other premises,
-- we can derive that Peter does not spill and is not cleanly.
theorem peter_not_spills_and_not_cleanly : ¬ Spills Peter ∧ ¬ Cleanly Peter := by
  have h := peter_either
  cases h with
  | inl hp =>
      have hnot : ¬ Tidy Peter := spills_imp_not_tidy Peter hp.left
      have ht   : Tidy Peter := cleanly_imp_tidy Peter hp.right
      exact False.elim (hnot ht)
  | inr hq =>
      exact hq

-- Note: With the given premises, we cannot derive Tidy Peter nor its negation.
-- The second disjunct ¬Spills Peter ∧ ¬Cleanly Peter is consistent with all premises,
-- and from it neither Tidy Peter nor ¬Tidy Peter follows.

--- Lean Verification ---
Success: True

==================================================
Final Result:
==================================================
Ground Truth: Uncertain
Prediction: Unknown
Correct: Yes
Total Iterations: 1
