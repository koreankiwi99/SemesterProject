Story ID: 435
Example ID: 1245
Premises: None of the students who currently work in the library are from the computer science department. 
All of the students with part-time jobs offered by the university currently work in the library. 
All of the students who are taking the database course are from the computer science department. 
All of the students taking a class with Professor David are taking the database course. 
All students working in the lab are taking a class with Professor David.
James is a student working in the lab. 
James doesn't work in the lab or have a part-time job offered by the university.
Conclusion: James does not have a part-time job offered by the university.

==================================================
Iteration 1
==================================================
<lean>
axiom Person : Type
axiom Student : Person → Prop
axiom WorksLibrary : Person → Prop
axiom FromCS : Person → Prop
axiom UniPartTimeJob : Person → Prop
axiom TakingDB : Person → Prop
axiom WithProfessorDavid : Person → Prop
axiom WorksLab : Person → Prop
axiom James : Person

-- Premises
axiom premise1 : ∀ x : Person, Student x ∧ WorksLibrary x → ¬ FromCS x
axiom premise2 : ∀ x : Person, Student x ∧ UniPartTimeJob x → WorksLibrary x
axiom premise3 : ∀ x : Person, Student x ∧ TakingDB x → FromCS x
axiom premise4 : ∀ x : Person, Student x ∧ WithProfessorDavid x → TakingDB x
axiom premise5 : ∀ x : Person, Student x ∧ WorksLab x → WithProfessorDavid x
axiom premise6 : Student James
axiom premise7 : WorksLab James
axiom premise8 : ¬ (WorksLab James ∨ UniPartTimeJob James)

theorem goal : ¬ UniPartTimeJob James := by
  intro h
  have hOr : WorksLab James ∨ UniPartTimeJob James := Or.inr h
  exact premise8 hOr
</lean>
ANSWER: True

--- Lean Code ---
axiom Person : Type
axiom Student : Person → Prop
axiom WorksLibrary : Person → Prop
axiom FromCS : Person → Prop
axiom UniPartTimeJob : Person → Prop
axiom TakingDB : Person → Prop
axiom WithProfessorDavid : Person → Prop
axiom WorksLab : Person → Prop
axiom James : Person

-- Premises
axiom premise1 : ∀ x : Person, Student x ∧ WorksLibrary x → ¬ FromCS x
axiom premise2 : ∀ x : Person, Student x ∧ UniPartTimeJob x → WorksLibrary x
axiom premise3 : ∀ x : Person, Student x ∧ TakingDB x → FromCS x
axiom premise4 : ∀ x : Person, Student x ∧ WithProfessorDavid x → TakingDB x
axiom premise5 : ∀ x : Person, Student x ∧ WorksLab x → WithProfessorDavid x
axiom premise6 : Student James
axiom premise7 : WorksLab James
axiom premise8 : ¬ (WorksLab James ∨ UniPartTimeJob James)

theorem goal : ¬ UniPartTimeJob James := by
  intro h
  have hOr : WorksLab James ∨ UniPartTimeJob James := Or.inr h
  exact premise8 hOr

--- Lean Verification ---
Success: True

==================================================
Final Result:
==================================================
Ground Truth: True
Prediction: True
Correct: Yes
Total Iterations: 1
