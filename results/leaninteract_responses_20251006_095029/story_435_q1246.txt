Story ID: 435
Example ID: 1246
Premises: None of the students who currently work in the library are from the computer science department. 
All of the students with part-time jobs offered by the university currently work in the library. 
All of the students who are taking the database course are from the computer science department. 
All of the students taking a class with Professor David are taking the database course. 
All students working in the lab are taking a class with Professor David.
James is a student working in the lab. 
James doesn't work in the lab or have a part-time job offered by the university.
Conclusion: James either takes the database course or has a part-time job offered by the university.

==================================================
Iteration 1
==================================================
<lean>
axiom Person : Type
axiom James : Person

axiom Student : Person → Prop
axiom WorksLibrary : Person → Prop
axiom WorksLab : Person → Prop
axiom FromCS : Person → Prop
axiom UnivPTJob : Person → Prop
axiom TakesDB : Person → Prop
axiom TakesWithDavid : Person → Prop

-- None of the students who currently work in the library are from the computer science department.
axiom h1 : ∀ x : Person, Student x ∧ WorksLibrary x → ¬ FromCS x

-- All of the students with part-time jobs offered by the university currently work in the library.
axiom h2 : ∀ x : Person, Student x ∧ UnivPTJob x → WorksLibrary x

-- All of the students who are taking the database course are from the computer science department.
axiom h3 : ∀ x : Person, Student x ∧ TakesDB x → FromCS x

-- All of the students taking a class with Professor David are taking the database course.
axiom h4 : ∀ x : Person, Student x ∧ TakesWithDavid x → TakesDB x

-- All students working in the lab are taking a class with Professor David.
axiom h5 : ∀ x : Person, Student x ∧ WorksLab x → TakesWithDavid x

-- James is a student working in the lab.
axiom h6 : Student James
axiom h7 : WorksLab James

-- James doesn't work in the lab or have a part-time job offered by the university.
-- Interpreted as: not (works in the lab) and not (has a university part-time job).
axiom h8 : ¬ WorksLab James ∧ ¬ UnivPTJob James

-- Goal: James either takes the database course or has a part-time job offered by the university.
theorem goal : TakesDB James ∨ UnivPTJob James := by
  have hw : Student James ∧ WorksLab James := And.intro h6 h7
  have hDavid : TakesWithDavid James := h5 James hw
  have hs_david : Student James ∧ TakesWithDavid James := And.intro h6 hDavid
  have hDB : TakesDB James := h4 James hs_david
  exact Or.inl hDB
</lean>
ANSWER: True

--- Lean Code ---
axiom Person : Type
axiom James : Person

axiom Student : Person → Prop
axiom WorksLibrary : Person → Prop
axiom WorksLab : Person → Prop
axiom FromCS : Person → Prop
axiom UnivPTJob : Person → Prop
axiom TakesDB : Person → Prop
axiom TakesWithDavid : Person → Prop

-- None of the students who currently work in the library are from the computer science department.
axiom h1 : ∀ x : Person, Student x ∧ WorksLibrary x → ¬ FromCS x

-- All of the students with part-time jobs offered by the university currently work in the library.
axiom h2 : ∀ x : Person, Student x ∧ UnivPTJob x → WorksLibrary x

-- All of the students who are taking the database course are from the computer science department.
axiom h3 : ∀ x : Person, Student x ∧ TakesDB x → FromCS x

-- All of the students taking a class with Professor David are taking the database course.
axiom h4 : ∀ x : Person, Student x ∧ TakesWithDavid x → TakesDB x

-- All students working in the lab are taking a class with Professor David.
axiom h5 : ∀ x : Person, Student x ∧ WorksLab x → TakesWithDavid x

-- James is a student working in the lab.
axiom h6 : Student James
axiom h7 : WorksLab James

-- James doesn't work in the lab or have a part-time job offered by the university.
-- Interpreted as: not (works in the lab) and not (has a university part-time job).
axiom h8 : ¬ WorksLab James ∧ ¬ UnivPTJob James

-- Goal: James either takes the database course or has a part-time job offered by the university.
theorem goal : TakesDB James ∨ UnivPTJob James := by
  have hw : Student James ∧ WorksLab James := And.intro h6 h7
  have hDavid : TakesWithDavid James := h5 James hw
  have hs_david : Student James ∧ TakesWithDavid James := And.intro h6 hDavid
  have hDB : TakesDB James := h4 James hs_david
  exact Or.inl hDB

--- Lean Verification ---
Success: True

==================================================
Final Result:
==================================================
Ground Truth: True
Prediction: True
Correct: Yes
Total Iterations: 1
