Story ID: 435
Example ID: 1247
Premises: None of the students who currently work in the library are from the computer science department. 
All of the students with part-time jobs offered by the university currently work in the library. 
All of the students who are taking the database course are from the computer science department. 
All of the students taking a class with Professor David are taking the database course. 
All students working in the lab are taking a class with Professor David.
James is a student working in the lab. 
James doesn't work in the lab or have a part-time job offered by the university.
Conclusion: James takes the database course.

==================================================
Iteration 1
==================================================
<lean>
axiom Person : Type
axiom James : Person

axiom WorkLibrary : Person → Prop
axiom FromCS : Person → Prop
axiom UniPTJ : Person → Prop
axiom TakesDB : Person → Prop
axiom TakesWithDavid : Person → Prop
axiom WorkLab : Person → Prop

-- None who work in the library are from CS
axiom library_not_cs : ∀ x : Person, WorkLibrary x → ¬ FromCS x
-- All with university PT jobs work in the library
axiom ptj_to_library : ∀ x : Person, UniPTJ x → WorkLibrary x
-- All taking DB are from CS
axiom db_to_cs : ∀ x : Person, TakesDB x → FromCS x
-- All taking a class with David are taking DB
axiom david_to_db : ∀ x : Person, TakesWithDavid x → TakesDB x
-- All working in the lab are taking a class with David
axiom lab_to_david : ∀ x : Person, WorkLab x → TakesWithDavid x
-- James works in the lab
axiom james_lab : WorkLab James
-- James neither works in the lab nor has a university PT job
axiom james_neither : ¬ WorkLab James ∧ ¬ UniPTJ James

theorem goal : TakesDB James := by
  have h1 : TakesWithDavid James := lab_to_david James james_lab
  exact david_to_db James h1
</lean>
ANSWER: True

--- Lean Code ---
axiom Person : Type
axiom James : Person

axiom WorkLibrary : Person → Prop
axiom FromCS : Person → Prop
axiom UniPTJ : Person → Prop
axiom TakesDB : Person → Prop
axiom TakesWithDavid : Person → Prop
axiom WorkLab : Person → Prop

-- None who work in the library are from CS
axiom library_not_cs : ∀ x : Person, WorkLibrary x → ¬ FromCS x
-- All with university PT jobs work in the library
axiom ptj_to_library : ∀ x : Person, UniPTJ x → WorkLibrary x
-- All taking DB are from CS
axiom db_to_cs : ∀ x : Person, TakesDB x → FromCS x
-- All taking a class with David are taking DB
axiom david_to_db : ∀ x : Person, TakesWithDavid x → TakesDB x
-- All working in the lab are taking a class with David
axiom lab_to_david : ∀ x : Person, WorkLab x → TakesWithDavid x
-- James works in the lab
axiom james_lab : WorkLab James
-- James neither works in the lab nor has a university PT job
axiom james_neither : ¬ WorkLab James ∧ ¬ UniPTJ James

theorem goal : TakesDB James := by
  have h1 : TakesWithDavid James := lab_to_david James james_lab
  exact david_to_db James h1

--- Lean Verification ---
Success: True

==================================================
Final Result:
==================================================
Ground Truth: Uncertain
Prediction: True
Correct: No
Total Iterations: 1
