Story ID: 197
Example ID: 562
Premises: It costs $205 to take the GRE test, which is cheaper than $300.
ETS provides financial aid to those GRE applicants who prove economic hardship.
Those living in single-parent families or having few resources available to them can prove economic hardship.
Tom lives in a single-parent family.
Tom's dad has been out of work, and Tom has few resources available to them. 
Tom is applying to take the GRE test.
Conclusion: No one taking the GRE test has financial aid provided to them by something.

==================================================
Iteration 1
==================================================
<lean>
axiom Person : Type
axiom Org : Type

axiom Tom : Person
axiom ETS : Org

axiom GREApplicant : Person → Prop
axiom TakingGRE : Person → Prop
axiom ProvesHardship : Person → Prop
axiom LivesSingleParent : Person → Prop
axiom HasFewResources : Person → Prop
axiom ProvidesFA : Org → Person → Prop

-- ETS provides financial aid to GRE applicants who prove economic hardship.
axiom ETS_provides_to_applicants_with_hardship :
  ∀ p : Person, GREApplicant p → ProvesHardship p → ProvidesFA ETS p

-- Those living in single-parent families or having few resources can prove economic hardship.
axiom hardship_from_single_or_few :
  ∀ p : Person, (LivesSingleParent p ∨ HasFewResources p) → ProvesHardship p

-- Tom's facts
axiom tom_lives_single : LivesSingleParent Tom
axiom tom_few_resources : HasFewResources Tom
axiom tom_applicant : GREApplicant Tom

-- No one taking the GRE has financial aid provided to them by something.
axiom no_fin_aid_for_takers :
  ∀ p : Person, TakingGRE p → ¬ ∃ o : Org, ProvidesFA o p

-- Goal: Tom gets financial aid from ETS.
theorem tom_gets_fin_aid_from_ETS : ProvidesFA ETS Tom := by
  have hHard : ProvesHardship Tom := by
    apply hardship_from_single_or_few Tom
    exact Or.inl tom_lives_single
  exact ETS_provides_to_applicants_with_hardship Tom tom_applicant hHard
</lean>
ANSWER: True

--- Lean Code ---
axiom Person : Type
axiom Org : Type

axiom Tom : Person
axiom ETS : Org

axiom GREApplicant : Person → Prop
axiom TakingGRE : Person → Prop
axiom ProvesHardship : Person → Prop
axiom LivesSingleParent : Person → Prop
axiom HasFewResources : Person → Prop
axiom ProvidesFA : Org → Person → Prop

-- ETS provides financial aid to GRE applicants who prove economic hardship.
axiom ETS_provides_to_applicants_with_hardship :
  ∀ p : Person, GREApplicant p → ProvesHardship p → ProvidesFA ETS p

-- Those living in single-parent families or having few resources can prove economic hardship.
axiom hardship_from_single_or_few :
  ∀ p : Person, (LivesSingleParent p ∨ HasFewResources p) → ProvesHardship p

-- Tom's facts
axiom tom_lives_single : LivesSingleParent Tom
axiom tom_few_resources : HasFewResources Tom
axiom tom_applicant : GREApplicant Tom

-- No one taking the GRE has financial aid provided to them by something.
axiom no_fin_aid_for_takers :
  ∀ p : Person, TakingGRE p → ¬ ∃ o : Org, ProvidesFA o p

-- Goal: Tom gets financial aid from ETS.
theorem tom_gets_fin_aid_from_ETS : ProvidesFA ETS Tom := by
  have hHard : ProvesHardship Tom := by
    apply hardship_from_single_or_few Tom
    exact Or.inl tom_lives_single
  exact ETS_provides_to_applicants_with_hardship Tom tom_applicant hHard

--- Lean Verification ---
Success: True

==================================================
Final Result:
==================================================
Ground Truth: False
Prediction: True
Correct: No
Total Iterations: 1
