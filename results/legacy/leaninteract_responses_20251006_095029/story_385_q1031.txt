Story ID: 385
Example ID: 1031
Premises: If someone is ranked highly by the Women's Tennis Association, then they are one of the most active players in major tennis. 
Everyone who lost to Iga Świątek at Roland Garros 2022 is ranked highly by the Women's Tennis Association.
All female tennis players at Roland Garros 2022 lost to Iga Świątek.
All tennis players at Roland Garros 2022 are either female or male.
All male tennis players at Roland Garros in 2022 lost to Rafael Nadal.
If Coco Gauff is ranked highly by the Women's Tennis Association or lost to Rafael Nadal, then Coco Gauff is not a male tennis player at Roland Garros 2022.
Coco Gauff is at Roland Garros 2022.
Conclusion: Coco Gauff is not both a player who lost to Iga Świątek at Roland Garros 2022 and one of the most active players in major tennis.

==================================================
Iteration 1
==================================================
<lean>
axiom Person : Type
axiom Coco : Person

-- Predicates
axiom RankedHighlyWTA : Person → Prop
axiom MostActiveMajor : Person → Prop
axiom LostToIgaRG2022 : Person → Prop
axiom FemaleRG2022 : Person → Prop
axiom MaleRG2022 : Person → Prop
axiom PlayerRG2022 : Person → Prop
axiom LostToRafaelNadal : Person → Prop

-- Premises
axiom ax1_ranked_implies_active :
  ∀ x : Person, RankedHighlyWTA x → MostActiveMajor x

axiom ax2_lostIga_implies_ranked :
  ∀ x : Person, LostToIgaRG2022 x → RankedHighlyWTA x

axiom ax3_female_implies_lostIga :
  ∀ x : Person, FemaleRG2022 x → LostToIgaRG2022 x

axiom ax4_player_implies_female_or_male :
  ∀ x : Person, PlayerRG2022 x → FemaleRG2022 x ∨ MaleRG2022 x

axiom ax5_male_implies_lostRafa :
  ∀ x : Person, MaleRG2022 x → LostToRafaelNadal x

axiom ax6_coco_ranked_or_lostRafa_implies_not_male :
  (RankedHighlyWTA Coco ∨ LostToRafaelNadal Coco) → ¬ MaleRG2022 Coco

axiom ax7_coco_player : PlayerRG2022 Coco

-- Derived facts about Coco Gauff
lemma coco_not_male : ¬ MaleRG2022 Coco := by
  intro hmale
  have hRafa : LostToRafaelNadal Coco := ax5_male_implies_lostRafa Coco hmale
  have hnotmale : ¬ MaleRG2022 Coco := ax6_coco_ranked_or_lostRafa_implies_not_male (Or.inr hRafa)
  exact hnotmale hmale

lemma coco_female : FemaleRG2022 Coco := by
  have hdisj : FemaleRG2022 Coco ∨ MaleRG2022 Coco :=
    ax4_player_implies_female_or_male Coco ax7_coco_player
  cases hdisj with
  | inl hf => exact hf
  | inr hm => exact False.elim (coco_not_male hm)

lemma coco_lostIga : LostToIgaRG2022 Coco :=
  ax3_female_implies_lostIga Coco coco_female

lemma coco_ranked : RankedHighlyWTA Coco :=
  ax2_lostIga_implies_ranked Coco coco_lostIga

lemma coco_active : MostActiveMajor Coco :=
  ax1_ranked_implies_active Coco coco_ranked

-- The conjunction holds: Coco both lost to Iga and is most active
theorem coco_lost_and_active : LostToIgaRG2022 Coco ∧ MostActiveMajor Coco := by
  exact And.intro coco_lostIga coco_active

-- The claimed statement in natural language is:
-- "Coco Gauff is not both (lost to Iga at RG2022) and (one of the most active players in major tennis)."
-- That is: ¬ (LostToIgaRG2022 Coco ∧ MostActiveMajor Coco).
-- We show its negation holds.
theorem negation_of_claim : ¬ (¬ (LostToIgaRG2022 Coco ∧ MostActiveMajor Coco)) := by
  intro hneg
  exact hneg coco_lost_and_active
</lean>
ANSWER: False

--- Lean Code ---
axiom Person : Type
axiom Coco : Person

-- Predicates
axiom RankedHighlyWTA : Person → Prop
axiom MostActiveMajor : Person → Prop
axiom LostToIgaRG2022 : Person → Prop
axiom FemaleRG2022 : Person → Prop
axiom MaleRG2022 : Person → Prop
axiom PlayerRG2022 : Person → Prop
axiom LostToRafaelNadal : Person → Prop

-- Premises
axiom ax1_ranked_implies_active :
  ∀ x : Person, RankedHighlyWTA x → MostActiveMajor x

axiom ax2_lostIga_implies_ranked :
  ∀ x : Person, LostToIgaRG2022 x → RankedHighlyWTA x

axiom ax3_female_implies_lostIga :
  ∀ x : Person, FemaleRG2022 x → LostToIgaRG2022 x

axiom ax4_player_implies_female_or_male :
  ∀ x : Person, PlayerRG2022 x → FemaleRG2022 x ∨ MaleRG2022 x

axiom ax5_male_implies_lostRafa :
  ∀ x : Person, MaleRG2022 x → LostToRafaelNadal x

axiom ax6_coco_ranked_or_lostRafa_implies_not_male :
  (RankedHighlyWTA Coco ∨ LostToRafaelNadal Coco) → ¬ MaleRG2022 Coco

axiom ax7_coco_player : PlayerRG2022 Coco

-- Derived facts about Coco Gauff
lemma coco_not_male : ¬ MaleRG2022 Coco := by
  intro hmale
  have hRafa : LostToRafaelNadal Coco := ax5_male_implies_lostRafa Coco hmale
  have hnotmale : ¬ MaleRG2022 Coco := ax6_coco_ranked_or_lostRafa_implies_not_male (Or.inr hRafa)
  exact hnotmale hmale

lemma coco_female : FemaleRG2022 Coco := by
  have hdisj : FemaleRG2022 Coco ∨ MaleRG2022 Coco :=
    ax4_player_implies_female_or_male Coco ax7_coco_player
  cases hdisj with
  | inl hf => exact hf
  | inr hm => exact False.elim (coco_not_male hm)

lemma coco_lostIga : LostToIgaRG2022 Coco :=
  ax3_female_implies_lostIga Coco coco_female

lemma coco_ranked : RankedHighlyWTA Coco :=
  ax2_lostIga_implies_ranked Coco coco_lostIga

lemma coco_active : MostActiveMajor Coco :=
  ax1_ranked_implies_active Coco coco_ranked

-- The conjunction holds: Coco both lost to Iga and is most active
theorem coco_lost_and_active : LostToIgaRG2022 Coco ∧ MostActiveMajor Coco := by
  exact And.intro coco_lostIga coco_active

-- The claimed statement in natural language is:
-- "Coco Gauff is not both (lost to Iga at RG2022) and (one of the most active players in major tennis)."
-- That is: ¬ (LostToIgaRG2022 Coco ∧ MostActiveMajor Coco).
-- We show its negation holds.
theorem negation_of_claim : ¬ (¬ (LostToIgaRG2022 Coco ∧ MostActiveMajor Coco)) := by
  intro hneg
  exact hneg coco_lost_and_active

--- Lean Verification ---
Success: False
Errors:
  - Function expected at
  PlayerRG2022 Coco
but this term has type
  Prop

Note: Expected a function because this term is being applied to the argument
  lemma
  - unexpected token ':'; expected command
  - Unknown identifier `coco_lostIga`
  - Unknown identifier `coco_active`

==================================================
Iteration 2
==================================================
<lean>
axiom Person : Type
axiom Coco : Person

-- Predicates
axiom RankedHighlyWTA : Person → Prop
axiom MostActiveMajor : Person → Prop
axiom LostToIgaRG2022 : Person → Prop
axiom FemaleRG2022 : Person → Prop
axiom MaleRG2022 : Person → Prop
axiom PlayerRG2022 : Person → Prop
axiom LostToRafaelNadal : Person → Prop

-- Premises
axiom ax1_ranked_implies_active :
  ∀ x : Person, RankedHighlyWTA x → MostActiveMajor x

axiom ax2_lostIga_implies_ranked :
  ∀ x : Person, LostToIgaRG2022 x → RankedHighlyWTA x

axiom ax3_female_implies_lostIga :
  ∀ x : Person, FemaleRG2022 x → LostToIgaRG2022 x

axiom ax4_player_implies_female_or_male :
  ∀ x : Person, PlayerRG2022 x → FemaleRG2022 x ∨ MaleRG2022 x

axiom ax5_male_implies_lostRafa :
  ∀ x : Person, MaleRG2022 x → LostToRafaelNadal x

axiom ax6_coco_ranked_or_lostRafa_implies_not_male :
  (RankedHighlyWTA Coco ∨ LostToRafaelNadal Coco) → ¬ MaleRG2022 Coco

axiom ax7_coco_player : PlayerRG2022 Coco

-- Derived facts about Coco Gauff
lemma coco_not_male : ¬ MaleRG2022 Coco := by
  intro hmale
  have hRafa : LostToRafaelNadal Coco := ax5_male_implies_lostRafa Coco hmale
  have hdisj : RankedHighlyWTA Coco ∨ LostToRafaelNadal Coco := Or.inr hRafa
  have hnotmale : ¬ MaleRG2022 Coco := ax6_coco_ranked_or_lostRafa_implies_not_male hdisj
  exact hnotmale hmale

lemma coco_female : FemaleRG2022 Coco := by
  have hdisj : FemaleRG2022 Coco ∨ MaleRG2022 Coco :=
    ax4_player_implies_female_or_male Coco ax7_coco_player
  cases hdisj with
  | inl hf => exact hf
  | inr hm =>
      have contra : False := coco_not_male hm
      exact False.elim contra

lemma coco_lostIga : LostToIgaRG2022 Coco :=
  ax3_female_implies_lostIga Coco coco_female

lemma coco_ranked : RankedHighlyWTA Coco :=
  ax2_lostIga_implies_ranked Coco coco_lostIga

lemma coco_active : MostActiveMajor Coco :=
  ax1_ranked_implies_active Coco coco_ranked

-- Coco both lost to Iga and is one of the most active players
theorem coco_lost_and_active : LostToIgaRG2022 Coco ∧ MostActiveMajor Coco :=
  And.intro coco_lostIga coco_active

-- Negation of the claim "¬ (LostToIgaRG2022 Coco ∧ MostActiveMajor Coco)"
theorem negation_of_claim : ¬ (¬ (LostToIgaRG2022 Coco ∧ MostActiveMajor Coco)) := by
  intro hneg
  exact hneg coco_lost_and_active
</lean>
ANSWER: False

--- Lean Code ---
axiom Person : Type
axiom Coco : Person

-- Predicates
axiom RankedHighlyWTA : Person → Prop
axiom MostActiveMajor : Person → Prop
axiom LostToIgaRG2022 : Person → Prop
axiom FemaleRG2022 : Person → Prop
axiom MaleRG2022 : Person → Prop
axiom PlayerRG2022 : Person → Prop
axiom LostToRafaelNadal : Person → Prop

-- Premises
axiom ax1_ranked_implies_active :
  ∀ x : Person, RankedHighlyWTA x → MostActiveMajor x

axiom ax2_lostIga_implies_ranked :
  ∀ x : Person, LostToIgaRG2022 x → RankedHighlyWTA x

axiom ax3_female_implies_lostIga :
  ∀ x : Person, FemaleRG2022 x → LostToIgaRG2022 x

axiom ax4_player_implies_female_or_male :
  ∀ x : Person, PlayerRG2022 x → FemaleRG2022 x ∨ MaleRG2022 x

axiom ax5_male_implies_lostRafa :
  ∀ x : Person, MaleRG2022 x → LostToRafaelNadal x

axiom ax6_coco_ranked_or_lostRafa_implies_not_male :
  (RankedHighlyWTA Coco ∨ LostToRafaelNadal Coco) → ¬ MaleRG2022 Coco

axiom ax7_coco_player : PlayerRG2022 Coco

-- Derived facts about Coco Gauff
lemma coco_not_male : ¬ MaleRG2022 Coco := by
  intro hmale
  have hRafa : LostToRafaelNadal Coco := ax5_male_implies_lostRafa Coco hmale
  have hdisj : RankedHighlyWTA Coco ∨ LostToRafaelNadal Coco := Or.inr hRafa
  have hnotmale : ¬ MaleRG2022 Coco := ax6_coco_ranked_or_lostRafa_implies_not_male hdisj
  exact hnotmale hmale

lemma coco_female : FemaleRG2022 Coco := by
  have hdisj : FemaleRG2022 Coco ∨ MaleRG2022 Coco :=
    ax4_player_implies_female_or_male Coco ax7_coco_player
  cases hdisj with
  | inl hf => exact hf
  | inr hm =>
      have contra : False := coco_not_male hm
      exact False.elim contra

lemma coco_lostIga : LostToIgaRG2022 Coco :=
  ax3_female_implies_lostIga Coco coco_female

lemma coco_ranked : RankedHighlyWTA Coco :=
  ax2_lostIga_implies_ranked Coco coco_lostIga

lemma coco_active : MostActiveMajor Coco :=
  ax1_ranked_implies_active Coco coco_ranked

-- Coco both lost to Iga and is one of the most active players
theorem coco_lost_and_active : LostToIgaRG2022 Coco ∧ MostActiveMajor Coco :=
  And.intro coco_lostIga coco_active

-- Negation of the claim "¬ (LostToIgaRG2022 Coco ∧ MostActiveMajor Coco)"
theorem negation_of_claim : ¬ (¬ (LostToIgaRG2022 Coco ∧ MostActiveMajor Coco)) := by
  intro hneg
  exact hneg coco_lost_and_active

--- Lean Verification ---
Success: False
Errors:
  - Function expected at
  PlayerRG2022 Coco
but this term has type
  Prop

Note: Expected a function because this term is being applied to the argument
  lemma
  - unexpected token ':'; expected command
  - Unknown identifier `coco_lostIga`
  - Unknown identifier `coco_active`

==================================================
Iteration 3
==================================================
<lean>
axiom Person : Type
axiom Coco : Person

-- Predicates
axiom RankedHighlyWTA : Person → Prop
axiom MostActiveMajor : Person → Prop
axiom LostToIgaRG2022 : Person → Prop
axiom FemaleRG2022 : Person → Prop
axiom MaleRG2022 : Person → Prop
axiom PlayerRG2022 : Person → Prop
axiom LostToRafaelNadal : Person → Prop

-- Premises
axiom ax1_ranked_implies_active :
  ∀ x : Person, RankedHighlyWTA x → MostActiveMajor x

axiom ax2_lostIga_implies_ranked :
  ∀ x : Person, LostToIgaRG2022 x → RankedHighlyWTA x

axiom ax3_female_implies_lostIga :
  ∀ x : Person, FemaleRG2022 x → LostToIgaRG2022 x

axiom ax4_player_implies_female_or_male :
  ∀ x : Person, PlayerRG2022 x → FemaleRG2022 x ∨ MaleRG2022 x

axiom ax5_male_implies_lostRafa :
  ∀ x : Person, MaleRG2022 x → LostToRafaelNadal x

axiom ax6_coco_ranked_or_lostRafa_implies_not_male :
  (RankedHighlyWTA Coco ∨ LostToRafaelNadal Coco) → ¬ MaleRG2022 Coco

axiom ax7_coco_player : PlayerRG2022 Coco

-- Derived facts about Coco Gauff
lemma coco_not_male : ¬ MaleRG2022 Coco := by
  intro hmale
  have hRafa : LostToRafaelNadal Coco := ax5_male_implies_lostRafa Coco hmale
  have hdisj : RankedHighlyWTA Coco ∨ LostToRafaelNadal Coco := Or.inr hRafa
  have hnotmale : ¬ MaleRG2022 Coco := ax6_coco_ranked_or_lostRafa_implies_not_male hdisj
  exact hnotmale hmale

lemma coco_female : FemaleRG2022 Coco := by
  have hdisj : FemaleRG2022 Coco ∨ MaleRG2022 Coco :=
    (ax4_player_implies_female_or_male Coco) ax7_coco_player
  exact Or.elim hdisj (fun hf => hf) (fun hm => False.elim (coco_not_male hm))

lemma coco_lostIga : LostToIgaRG2022 Coco :=
  (ax3_female_implies_lostIga Coco) coco_female

lemma coco_ranked : RankedHighlyWTA Coco :=
  (ax2_lostIga_implies_ranked Coco) coco_lostIga

lemma coco_active : MostActiveMajor Coco :=
  (ax1_ranked_implies_active Coco) coco_ranked

-- Coco both lost to Iga and is one of the most active players
theorem coco_lost_and_active : LostToIgaRG2022 Coco ∧ MostActiveMajor Coco :=
  And.intro coco_lostIga coco_active

-- Negation of the claim "¬ (LostToIgaRG2022 Coco ∧ MostActiveMajor Coco)"
theorem negation_of_claim : ¬ (¬ (LostToIgaRG2022 Coco ∧ MostActiveMajor Coco)) := by
  intro hneg
  exact hneg coco_lost_and_active
</lean>
ANSWER: False

--- Lean Code ---
axiom Person : Type
axiom Coco : Person

-- Predicates
axiom RankedHighlyWTA : Person → Prop
axiom MostActiveMajor : Person → Prop
axiom LostToIgaRG2022 : Person → Prop
axiom FemaleRG2022 : Person → Prop
axiom MaleRG2022 : Person → Prop
axiom PlayerRG2022 : Person → Prop
axiom LostToRafaelNadal : Person → Prop

-- Premises
axiom ax1_ranked_implies_active :
  ∀ x : Person, RankedHighlyWTA x → MostActiveMajor x

axiom ax2_lostIga_implies_ranked :
  ∀ x : Person, LostToIgaRG2022 x → RankedHighlyWTA x

axiom ax3_female_implies_lostIga :
  ∀ x : Person, FemaleRG2022 x → LostToIgaRG2022 x

axiom ax4_player_implies_female_or_male :
  ∀ x : Person, PlayerRG2022 x → FemaleRG2022 x ∨ MaleRG2022 x

axiom ax5_male_implies_lostRafa :
  ∀ x : Person, MaleRG2022 x → LostToRafaelNadal x

axiom ax6_coco_ranked_or_lostRafa_implies_not_male :
  (RankedHighlyWTA Coco ∨ LostToRafaelNadal Coco) → ¬ MaleRG2022 Coco

axiom ax7_coco_player : PlayerRG2022 Coco

-- Derived facts about Coco Gauff
lemma coco_not_male : ¬ MaleRG2022 Coco := by
  intro hmale
  have hRafa : LostToRafaelNadal Coco := ax5_male_implies_lostRafa Coco hmale
  have hdisj : RankedHighlyWTA Coco ∨ LostToRafaelNadal Coco := Or.inr hRafa
  have hnotmale : ¬ MaleRG2022 Coco := ax6_coco_ranked_or_lostRafa_implies_not_male hdisj
  exact hnotmale hmale

lemma coco_female : FemaleRG2022 Coco := by
  have hdisj : FemaleRG2022 Coco ∨ MaleRG2022 Coco :=
    (ax4_player_implies_female_or_male Coco) ax7_coco_player
  exact Or.elim hdisj (fun hf => hf) (fun hm => False.elim (coco_not_male hm))

lemma coco_lostIga : LostToIgaRG2022 Coco :=
  (ax3_female_implies_lostIga Coco) coco_female

lemma coco_ranked : RankedHighlyWTA Coco :=
  (ax2_lostIga_implies_ranked Coco) coco_lostIga

lemma coco_active : MostActiveMajor Coco :=
  (ax1_ranked_implies_active Coco) coco_ranked

-- Coco both lost to Iga and is one of the most active players
theorem coco_lost_and_active : LostToIgaRG2022 Coco ∧ MostActiveMajor Coco :=
  And.intro coco_lostIga coco_active

-- Negation of the claim "¬ (LostToIgaRG2022 Coco ∧ MostActiveMajor Coco)"
theorem negation_of_claim : ¬ (¬ (LostToIgaRG2022 Coco ∧ MostActiveMajor Coco)) := by
  intro hneg
  exact hneg coco_lost_and_active

--- Lean Verification ---
Success: False
Errors:
  - Function expected at
  PlayerRG2022 Coco
but this term has type
  Prop

Note: Expected a function because this term is being applied to the argument
  lemma
  - unexpected token ':'; expected command
  - Unknown identifier `coco_lostIga`
  - Unknown identifier `coco_active`

==================================================
Iteration 4
==================================================
<lean>
axiom Person : Type
axiom Coco : Person

-- Predicates
axiom RankedHighlyWTA : Person → Prop
axiom MostActiveMajor : Person → Prop
axiom LostToIgaRG2022 : Person → Prop
axiom FemaleRG2022 : Person → Prop
axiom MaleRG2022 : Person → Prop
axiom PlayerRG2022 : Person → Prop
axiom LostToRafaelNadal : Person → Prop

-- Premises
axiom ax1_ranked_implies_active :
  ∀ x : Person, RankedHighlyWTA x → MostActiveMajor x

axiom ax2_lostIga_implies_ranked :
  ∀ x : Person, LostToIgaRG2022 x → RankedHighlyWTA x

axiom ax3_female_implies_lostIga :
  ∀ x : Person, FemaleRG2022 x → LostToIgaRG2022 x

axiom ax4_player_implies_female_or_male :
  ∀ x : Person, PlayerRG2022 x → FemaleRG2022 x ∨ MaleRG2022 x

axiom ax5_male_implies_lostRafa :
  ∀ x : Person, MaleRG2022 x → LostToRafaelNadal x

axiom ax6_coco_ranked_or_lostRafa_implies_not_male :
  (RankedHighlyWTA Coco ∨ LostToRafaelNadal Coco) → ¬ MaleRG2022 Coco

axiom ax7_coco_player : PlayerRG2022 Coco

-- From the premises we can derive that Coco both lost to Iga and is one of the most active players.
theorem coco_lost_and_active : LostToIgaRG2022 Coco ∧ MostActiveMajor Coco := by
  -- Coco is either female or male at RG2022
  have hdisj : FemaleRG2022 Coco ∨ MaleRG2022 Coco :=
    (ax4_player_implies_female_or_male Coco) ax7_coco_player
  -- Show Coco is not male
  have h_not_male : ¬ MaleRG2022 Coco := by
    intro hm
    have hRafa : LostToRafaelNadal Coco := (ax5_male_implies_lostRafa Coco) hm
    have : ¬ MaleRG2022 Coco := ax6_coco_ranked_or_lostRafa_implies_not_male (Or.inr hRafa)
    exact this hm
  -- Hence Coco is female
  have h_female : FemaleRG2022 Coco := by
    cases hdisj with
    | inl hf => exact hf
    | inr hm => exact False.elim (h_not_male hm)
  -- Therefore Coco lost to Iga
  have h_lostIga : LostToIgaRG2022 Coco :=
    (ax3_female_implies_lostIga Coco) h_female
  -- Therefore Coco is ranked highly by WTA
  have h_ranked : RankedHighlyWTA Coco :=
    (ax2_lostIga_implies_ranked Coco) h_lostIga
  -- Therefore Coco is one of the most active players in major tennis
  have h_active : MostActiveMajor Coco :=
    (ax1_ranked_implies_active Coco) h_ranked
  exact And.intro h_lostIga h_active

-- The claim "Coco is not both lost to Iga and one of the most active" is false:
-- we prove its negation ¬¬(Lost ∧ Active).
theorem negation_of_claim : ¬ (¬ (LostToIgaRG2022 Coco ∧ MostActiveMajor Coco)) := by
  intro hneg
  exact hneg coco_lost_and_active
</lean>
ANSWER: False

--- Lean Code ---
axiom Person : Type
axiom Coco : Person

-- Predicates
axiom RankedHighlyWTA : Person → Prop
axiom MostActiveMajor : Person → Prop
axiom LostToIgaRG2022 : Person → Prop
axiom FemaleRG2022 : Person → Prop
axiom MaleRG2022 : Person → Prop
axiom PlayerRG2022 : Person → Prop
axiom LostToRafaelNadal : Person → Prop

-- Premises
axiom ax1_ranked_implies_active :
  ∀ x : Person, RankedHighlyWTA x → MostActiveMajor x

axiom ax2_lostIga_implies_ranked :
  ∀ x : Person, LostToIgaRG2022 x → RankedHighlyWTA x

axiom ax3_female_implies_lostIga :
  ∀ x : Person, FemaleRG2022 x → LostToIgaRG2022 x

axiom ax4_player_implies_female_or_male :
  ∀ x : Person, PlayerRG2022 x → FemaleRG2022 x ∨ MaleRG2022 x

axiom ax5_male_implies_lostRafa :
  ∀ x : Person, MaleRG2022 x → LostToRafaelNadal x

axiom ax6_coco_ranked_or_lostRafa_implies_not_male :
  (RankedHighlyWTA Coco ∨ LostToRafaelNadal Coco) → ¬ MaleRG2022 Coco

axiom ax7_coco_player : PlayerRG2022 Coco

-- From the premises we can derive that Coco both lost to Iga and is one of the most active players.
theorem coco_lost_and_active : LostToIgaRG2022 Coco ∧ MostActiveMajor Coco := by
  -- Coco is either female or male at RG2022
  have hdisj : FemaleRG2022 Coco ∨ MaleRG2022 Coco :=
    (ax4_player_implies_female_or_male Coco) ax7_coco_player
  -- Show Coco is not male
  have h_not_male : ¬ MaleRG2022 Coco := by
    intro hm
    have hRafa : LostToRafaelNadal Coco := (ax5_male_implies_lostRafa Coco) hm
    have : ¬ MaleRG2022 Coco := ax6_coco_ranked_or_lostRafa_implies_not_male (Or.inr hRafa)
    exact this hm
  -- Hence Coco is female
  have h_female : FemaleRG2022 Coco := by
    cases hdisj with
    | inl hf => exact hf
    | inr hm => exact False.elim (h_not_male hm)
  -- Therefore Coco lost to Iga
  have h_lostIga : LostToIgaRG2022 Coco :=
    (ax3_female_implies_lostIga Coco) h_female
  -- Therefore Coco is ranked highly by WTA
  have h_ranked : RankedHighlyWTA Coco :=
    (ax2_lostIga_implies_ranked Coco) h_lostIga
  -- Therefore Coco is one of the most active players in major tennis
  have h_active : MostActiveMajor Coco :=
    (ax1_ranked_implies_active Coco) h_ranked
  exact And.intro h_lostIga h_active

-- The claim "Coco is not both lost to Iga and one of the most active" is false:
-- we prove its negation ¬¬(Lost ∧ Active).
theorem negation_of_claim : ¬ (¬ (LostToIgaRG2022 Coco ∧ MostActiveMajor Coco)) := by
  intro hneg
  exact hneg coco_lost_and_active

--- Lean Verification ---
Success: True

==================================================
Final Result:
==================================================
Ground Truth: False
Prediction: False
Correct: Yes
Total Iterations: 4
